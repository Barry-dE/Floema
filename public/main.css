html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
div,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

li {
  text-decoration: none;
  list-style-type: none;
}

.home__link__icon, .home__gallery, .detail_button_icon, .detail_media_image, .collections__gallery__media__image, .collections__gallery, .collections__wrapper, .about__highlight__media__image, .about__gallery__media__image, .about__content__media__image, .navigation, .preloader, .home, .detail, .collections {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.home, .detail, .preloader {
  align-items: center;
  display: flex;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.detail_information_item_title, .detail_information_collection, .about__highlight__label, .about__content__label {
  font-size: 1.2rem;
}
@media (max-width: 767px) {
  .detail_information_item_title, .detail_information_collection, .about__highlight__label, .about__content__label {
    font-size: 3rem;
  }
}

.home__link, .detail_button, .preloader__number {
  font-size: 1.4rem;
}

.detail_information_item_description, .detail_information_highlights, .collections__article__description {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.2;
}
@media (max-width: 767px) {
  .detail_information_item_description, .detail_information_highlights, .collections__article__description {
    font-size: 2.8rem;
  }
}

body {
  font-size: 1.8rem;
  font-weight: 300;
  line-height: 1.5;
}

.navigation__list__link {
  display: inline-block;
  overflow: hidden;
  position: relative;
  vertical-align: top;
}

.navigation__list__link:after {
  background: currentColor;
  bottom: 0;
  content: "";
  height: 1px;
  left: 0;
  position: absolute;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
  width: 100%;
}

.navigation__list__link:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.navigation__list__link:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.navigation__list__link {
  display: inline-block;
}
.home, .detail, .collections {
  opacity: 0;
  visibility: hidden;
}

.navigation__list__link {
  font-family: "George X";
  font-size: 2.4rem;
  letter-spacing: 0.1rem;
  line-height: 1;
}

.detail_information_link {
  font-family: "George X";
  font-size: 3rem;
}
@media (max-width: 767px) {
  .detail_information_link {
    font-size: 5.2rem;
  }
}

.preloader__text span span {
  font-family: "George X";
  font-size: 5.3rem;
  line-height: 1;
}

.collections__article__title {
  font-family: "George X";
  font-size: 6rem;
}

.about__title {
  font-family: "George X";
  font-size: 9rem;
  line-height: 1;
}
@media (max-width: 767px) {
  .about__title {
    font-size: 12rem;
  }
}

.detail_information_title {
  font-family: "George X";
  font-size: 12rem;
  line-height: 0.82;
}
@media (max-width: 767px) {
  .detail_information_title {
    font-size: 18rem;
  }
}

.collections__titles__title, .about__highlight__title, .home__titles__title {
  font-family: "George X";
  font-size: 20rem;
}

.home__titles {
  display: flex;
  left: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
  position: absolute;
  top: 50%;
  align-items: center;
}

.home__titles__label {
  transform: rotate(90deg);
  text-align: center;
  text-transform: uppercase;
  position: relative;
  bottom: -1.5rem;
}

.home__titles__title {
  position: relative;
}

@font-face {
  font-family: "George X";
  src: url(2f7baf40d2d8a5cc19b7.woff2) format("woff2"), url(ce09147f764accbd7a65.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(5d2ccc1c3088949259de.woff2) format("woff2"), url(2283fffcc4a820464b57.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(399f1965a95be52fef0f.woff2) format("woff2"), url(b20fbd8202ad0a49c611.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(8f29a10809af495a2edc.woff2) format("woff2"), url(026777345b8f163953dd.woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
*,
*:after,
*:before {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  line-height: 1;
  background: #c97164;
  color: #f9f1e7;
  height: 100%;
  width: 100%;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  font-family: "Suisse BP";
  height: 100%;
  width: 100%;
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

canvas {
  pointer-events: none;
  position: relative;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

img {
  transition: opacity 0.4s ease;
  vertical-align: middle;
  width: 40rem;
  height: 50rem;
}
[data-animation=label] span,
[data-animation=paragraph] span,
[data-animation=title] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

[data-animation=button] {
  display: inline-block;
  position: relative;
  white-space: nowrap;
}
[data-animation=button] span {
  display: inline-block;
  transform-origin: center center 0.5em;
  vertical-align: middle;
}

[data-animation=link] {
  display: inline-block;
  position: relative;
  white-space: nowrap;
}
[data-animation=link] span {
  display: inline-block;
  transform-origin: center center 0.5em;
  vertical-align: middle;
}

.preloader {
  position: fixed;
  flex-direction: column;
  background-color: #c97164;
  color: #f9f1e7;
  z-index: 3;
}

.preloader__text {
  max-width: 68rem;
  text-align: center;
  line-height: 1;
  word-spacing: 0.5rem;
}
.preloader__text span {
  display: inline-block;
  overflow: hidden;
}
.preloader__number {
  position: absolute;
  bottom: 7.3rem;
  overflow: hidden;
  transform: translate(-50%, -50%);
}
@media (max-width: 767px) {
  .preloader__number {
    font-size: 2.4rem;
  }
}

.preloader__number__text {
  display: inline-block;
}

.navigation {
  color: #f9f1e7;
  pointer-events: none;
  position: fixed;
  z-index: 2;
}

.navigation__link {
  font-size: 0;
  height: 2rem;
  left: 4rem;
  pointer-events: auto;
  position: absolute;
  top: 4rem;
  transition: opacity 0.4s ease;
  width: 12.8rem;
}
.navigation__link:hover {
  opacity: 0.5;
}
@media (max-width: 767px) {
  .navigation__link {
    height: 4.3rem;
    left: 5rem;
    top: 5rem;
    width: 27.9rem;
  }
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  pointer-events: auto;
  position: absolute;
  right: 4rem;
  top: 4rem;
}

.navigation__list__link {
  display: block;
}

.about {
  width: 100%;
  height: 100%;
  opacity: 0;
}

.about__title {
  margin: auto;
  max-width: 128rem;
  text-align: center;
}
@media (max-width: 767px) {
  .about__title {
    max-width: 67.7rem;
  }
}

.about__content {
  display: flex;
  justify-content: center;
  margin: 20rem auto;
  position: relative;
}
.about__content:first-child {
  margin-top: 0;
}
.about__content:last-child {
  margin-bottom: 0;
}
.about__content:nth-child(5) {
  justify-content: flex-end;
}
.about__content:nth-child(8) {
  justify-content: flex-start;
}
@media (max-width: 767px) {
  .about__content:nth-child(5) {
    justify-content: flex-end;
  }
  .about__content:nth-child(8) {
    justify-content: flex-start;
  }
}

.about__content__wrapper {
  display: flex;
}
.about__content--right .about__content__wrapper {
  flex-direction: row-reverse;
}
@media (max-width: 767px) {
  .about__content:nth-child(3) .about__content__wrapper {
    flex-direction: column-reverse;
  }
  .about__content:nth-child(5) .about__content__wrapper {
    flex-direction: column;
  }
  .about__content:nth-child(8) .about__content__wrapper {
    flex-direction: column-reverse;
  }
  .about__content:nth-child(9) .about__content__wrapper {
    flex-direction: column-reverse;
  }
}

.about__content__box {
  display: flex;
}
@media (max-width: 768px) {
  .about__content__box {
    margin: auto;
    width: 60.9rem;
  }
  .about__content:nth-child(3) .about__content__box {
    margin-top: 10rem;
  }
  .about__content:nth-child(5) .about__content__box {
    margin-bottom: 10rem;
  }
  .about__content:nth-child(8) .about__content__box {
    margin-top: 10rem;
  }
  .about__content:nth-child(9) .about__content__box {
    margin-top: 10rem;
  }
}

.about__content__label {
  text-transform: uppercase;
  width: 18rem;
}
@media (max-width: 768px) {
  .about__content__label {
    font-size: 2.4rem;
    padding-right: 2.5rem;
    width: 15rem;
  }
}

.about__content__description {
  width: 36.2rem;
}
.about__content__description p:not(:first-child) {
  margin-top: 2.5rem;
}
@media (max-width: 768px) {
  .about__content__description {
    width: calc(100% - 15rem);
  }
}

.about__content__media {
  position: relative;
}
.about__content:nth-child(3) .about__content__media {
  height: 80.8rem;
  margin-left: 18rem;
  width: 53.8rem;
}
.about__content:nth-child(5) .about__content__media {
  height: 60rem;
  margin-left: 18rem;
  width: 96rem;
}
.about__content:nth-child(8) .about__content__media {
  height: 52rem;
  margin-right: 12rem;
  width: 84.2rem;
}
.about__content:nth-child(9) .about__content__media {
  height: 85.8rem;
  margin-left: 22rem;
  width: 60.8rem;
}
@media (max-width: 768px) {
  .about__content:nth-child(3) .about__content__media {
    height: 91.4rem;
    margin-left: 0;
    width: 60.9rem;
  }
  .about__content:nth-child(5) .about__content__media {
    height: 50rem;
    margin-left: 0;
    width: 100vw;
  }
  .about__content:nth-child(8) .about__content__media {
    height: 52rem;
    margin-right: 0;
    width: 100vw;
  }
  .about__content:nth-child(9) .about__content__media {
    height: 85.8rem;
    margin-left: 0;
    width: 60.8rem;
  }
}

.about__content__media__image {
  object-fit: cover;
}

.about__gallery {
  height: 58.6rem;
  margin: 15rem 0;
  overflow: hidden;
  pointer-events: none;
  position: relative;
}
.about__gallery:first-child {
  margin-top: 0;
}
.about__gallery:last-child {
  margin-bottom: 0;
}

.about__gallery__wrapper {
  align-items: center;
  display: flex;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.about__gallery__media {
  height: 43.7rem;
  margin: 0 4rem;
  position: relative;
  width: 30.9rem;
}

.about__gallery__media__image {
  object-fit: cover;
}

.about__highlight {
  margin: 20rem 0;
}
.about__highlight:first-child {
  margin-top: 0;
}
.about__highlight:last-child {
  margin-bottom: 0;
}

.about__highlight__wrapper {
  height: 104rem;
  margin: auto;
  position: relative;
  width: 144rem;
}
.about__highlight:nth-child(4) .about__highlight__wrapper {
  width: 104rem;
}
@media (max-width: 768px) {
  .about__highlight__wrapper {
    height: 316.2rem;
    width: 100%;
  }
  .about__highlight:nth-child(4) .about__highlight__wrapper {
    height: 119.3rem;
    width: 100%;
  }
}

.about__highlight__label {
  top: 6rem;
  left: 50%;
  letter-spacing: 0.1rem;
  position: absolute;
  transform: translateX(-50%);
  text-align: center;
  text-transform: uppercase;
  width: 9.6rem;
}
@media (max-width: 768px) {
  .about__highlight__label {
    font-size: 2.4rem;
    margin-top: 6.5rem;
    top: 90rem;
    width: 19rem;
  }
}

.about__highlight__title {
  padding-bottom: 2rem;
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
}
@media (max-width: 768px) {
  .about__highlight__title {
    font-size: 30rem;
    margin-top: 6.5rem;
  }
}

.about__highlight__media {
  height: 76rem;
  position: absolute;
  width: 54rem;
}
.about__highlight:nth-child(4) .about__highlight__media {
  height: 52.8rem;
  width: 36rem;
}
.about__highlight__media:first-child {
  left: 0;
  top: 0;
}
.about__highlight__media:last-child {
  bottom: 0;
  right: 0;
}
@media (max-width: 768px) {
  .about__highlight:last-child .about__highlight__media {
    height: 76rem;
    width: 54rem;
  }
  .about__highlight:last-child .about__highlight__media:first-child {
    left: 50%;
    top: 0;
    transform: translateX(-50%);
  }
  .about__highlight:last-child .about__highlight__media:last-child {
    bottom: 0;
    right: 50%;
    transform: translateX(50%);
  }
}

.about__highlight__media__image {
  object-fit: cover;
}

.collections__wrapper {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.collections__titles {
  align-items: center;
  display: flex;
  left: 50%;
  position: absolute;
  transform: translate(-50%, -50%) rotate(-90deg);
  top: 50%;
}

.collections__titles__label {
  transform: rotate(90deg);
  text-align: center;
  margin: 0 3rem;
  text-transform: uppercase;
  letter-spacing: 0.1rem;
}

.collections__titles__title {
  padding-top: 2rem;
}

.collections__gallery__wrapper {
  display: flex;
  align-items: center;
  top: 50%;
  position: absolute;
  transform: translateY(-50%);
}

.collections__gallery__link {
  display: block;
  margin: 0 2rem;
}

.collections__gallery__media {
  height: 54.1rem;
  position: relative;
  width: 40.7rem;
}

.collections__gallery__media__image {
  object-fit: cobver;
}

.collections__content {
  position: absolute;
  bottom: 2rem;
  left: 4rem;
}

.collections__article {
  display: none;
}
.collections__article--active {
  display: inline-block;
}

.collections__article__description {
  max-width: 44rem;
}

.detail {
  flex-direction: column;
}

.detail_wrapper {
  align-items: center;
  display: flex;
}

.detail_media {
  height: 78.2rem;
  width: 55.4rem;
  position: relative;
}

.detail_media_image {
  object-fit: cover;
}

.detail_information {
  height: 75rem;
  margin-left: 6rem;
}

.detail_information_collection {
  text-transform: uppercase;
  margin-bottom: 4rem;
}

.detail_information_title {
  max-width: 54rem;
}

.detail_information_content {
  padding-left: 15rem;
}

.detail_information_highlights {
  margin-top: 6rem;
  gap: 6rem;
  display: flex;
  flex-direction: column;
}

.detail_information_highlight {
  display: flex;
  align-items: center;
}

.detail_information_highlight_icon {
  height: 5rem;
  width: 5rem;
  background-color: #fff;
  border-radius: 50%;
  margin-right: 4rem;
}

.detail_information_list {
  margin-top: 5rem;
}

.detail_information-item {
  display: flex;
}
.detail_information-item:not(:first-child) {
  margin-top: 3rem;
}

.detail_information_item_title {
  width: 10rem;
}

.detail_information_item_description {
  max-width: 44rem;
}

.detail_information_link {
  margin-top: 5rem;
  display: inline-block;
}

.detail_button {
  align-items: center;
  bottom: 5rem;
  display: flex;
  height: 6rem;
  justify-content: center;
  left: 50%;
  position: absolute;
  transform: translateX(-50%);
  width: 12.4rem;
  z-index: 2;
}
@media (max-width: 767px) {
  .detail_button {
    bottom: 12rem;
    height: 13rem;
    width: 26.8rem;
  }
}

.home {
  overflow: hidden;
  text-align: center;
}
.home:before, .home:after {
  content: "";
  height: 24rem;
  left: 0;
  position: absolute;
  width: 100%;
  z-index: 1;
}
.home:before {
  background: linear-gradient(to bottom, #c97164 0%, rgba(201, 113, 100, 0) 100%);
  top: 0;
}
.home:after {
  background: linear-gradient(to top, #c97164 0%, rgba(201, 113, 100, 0) 100%);
  bottom: 0;
}

.home__gallery__media {
  position: absolute;
}

.home__link {
  align-items: center;
  bottom: 5rem;
  display: flex;
  height: 6rem;
  justify-content: center;
  left: 50%;
  letter-spacing: 0.05rem;
  position: absolute;
  text-transform: uppercase;
  transform: translateX(-50%);
  width: 28.8rem;
  z-index: 2;
}
@media (max-width: 767px) {
  .home__link {
    bottom: 7.5rem;
    height: 13.7rem;
    width: 55rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/